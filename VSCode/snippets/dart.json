{
	// Place your snippets for dart here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"hCopyright 版权声明": {
		"prefix": "hCopyright",
		"body": [
			"//",
			"//  ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}.dart",
			"//  $WORKSPACE_NAME",
			"//",
			"//  Created by $shangbinbin on $CURRENT_YEAR/$CURRENT_MONTH/$CURRENT_DATE.",
			"//  Copyright © $CURRENT_YEAR $Shang. All rights reserved.",
			"//",
			"//",
			"",
			"$1"
		],
		"description": "create StatefulWidget"
	},
	"StatefulWidget 模板": {
		"prefix": "hStatefulWidget",
		"body": [
			"",
			"import 'package:flutter/material.dart';",
			"",
			"",
			"class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} extends StatefulWidget {",
			"",
			"  ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}({ Key? key, this.title}) : super(key: key);",
      "",
			"  final String? title;",
      "",
			"  @override",
			"  _${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}$State createState() => _${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}State();",
			"}",
			"",
			"class _${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}$State extends State<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}> {",
			"",
			"",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"	dynamic arguments = ModalRoute.of(context)!.settings.arguments;",
			"",
			"	return Scaffold(",
			"		appBar: AppBar(",
			"		  title: Text(widget.title ?? '$$widget$1'),",
			"		),",
			"		body: Text(arguments.toString())",
			"	  );",
			"  }",
			"",
			"}",
		],
		"description": "create StatefulWidget"
	},

	"StatelessWidget 模板": {
		"prefix": "hStatelessWidget",
		"body": [
			"",
			"import 'package:flutter/material.dart';",
			"",
			"",
			"class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} extends StatelessWidget {",
			"",
			"  ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}({ Key? key, this.title}) : super(key: key);",
      "",
			"  String? title;",
      "",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"	dynamic arguments = ModalRoute.of(context)!.settings.arguments;",
			"",
			"	return Scaffold(",
			"		appBar: AppBar(",
			"		  title: Text(title ?? '$$this'),",
			"		),",
			"		body: Text(arguments.toString())",
			"	  );",
			"  }",
			"",
			"}",
		],
		"description": "create StatelessWidget"
	},
	"singleton 单例": {
		"prefix": "hSingleton",
		"body": [
			"static final ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} _instance = ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}._();",
			"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}._();",
			"factory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}() => _instance;",
			"static ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} get instance => _instance;",
			"$1"
		],
		"description": "create Singleton"
	},
  "Builder": {
		"prefix": "hBuilder",
		"body": [
			"Builder(",
			"  builder: (context) {",
			"    $1",
			"    return SizedBox();",
			"  }",
      "),"
		],
		"description": "create Builder"
	},
	"StatefulBuilder": {
		"prefix": "hStatefulBuilder",
		"body": [
			"StatefulBuilder(",
			"  builder: (context, setState) {",
			"    $1",
			"    return SizedBox();",
			"  }",
      "),"
		],
		"description": "create StatefulBuilder"
	},
	"LayoutBuilder": {
		"prefix": "hLayoutBuilder",
		"body": [
			"LayoutBuilder(",
			"  builder: (context, constraints) {",
			"    $1",
			"    return SizedBox();",
			"  }",
      "),"
		],
		"description": "create LayoutBuilder"
	},
}